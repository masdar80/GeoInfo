# Generated by Django 3.1 on 2021-12-18 04:20

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='geophysicalproject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpp_name', models.CharField(blank=True, max_length=254, null=True)),
                ('gpp_owner', models.CharField(blank=True, max_length=254, null=True)),
                ('gpp_type', models.CharField(blank=True, max_length=254, null=True)),
                ('gpp_startdate', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='geophysicalsurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_datetime', models.DateField(null=True)),
                ('gps_method', models.CharField(blank=True, max_length=254, null=True)),
                ('spec_obs_equipment', models.CharField(blank=True, max_length=254, null=True)),
                ('gps_surveyor', models.CharField(blank=True, max_length=254, null=True)),
                ('geophysicalproject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geophysicalsurveys', to='observe.geophysicalproject')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationWell_Inf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('construction_method', models.CharField(max_length=254)),
                ('completion_date', models.DateField()),
                ('construction_firm', models.CharField(max_length=50)),
                ('total_depth', models.IntegerField()),
                ('well_type', models.CharField(max_length=50)),
                ('obs_start_date', models.DateField()),
                ('obs_end_date', models.DateField()),
                ('obs_item', models.CharField(max_length=254)),
                ('obs_frequency', models.CharField(max_length=254)),
                ('obs_type', models.CharField(max_length=254)),
                ('equipment_spec', models.CharField(max_length=254)),
                ('data_source_2', models.CharField(max_length=254)),
                ('other_source_2', models.CharField(max_length=254)),
                ('well_registration', models.CharField(max_length=254)),
                ('data_availability', models.CharField(max_length=254)),
                ('coordinates_inf', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='pumping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmp_pumpdepth', models.FloatField(blank=True, null=True)),
                ('pmp_startdatetime', models.DateField(blank=True, null=True)),
                ('pmp_enddatetime', models.DateField(blank=True, null=True)),
                ('pmp_time', models.DateTimeField()),
                ('pmp_discharge', models.FloatField(blank=True, null=True)),
                ('pmp_pumptype', models.CharField(blank=True, max_length=254, null=True)),
                ('pmp_generatortype', models.CharField(blank=True, max_length=254, null=True)),
                ('pmp_dischargemethod', models.CharField(blank=True, max_length=254, null=True)),
                ('pmp_capacitydevice', models.CharField(blank=True, max_length=254, null=True)),
                ('pmp_manometertype', models.CharField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='vertical_electric_sounding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ves_pointname', models.CharField(blank=True, max_length=254, null=True)),
                ('ves_configuaration', models.CharField(blank=True, max_length=254, null=True)),
                ('ves_linedirection', models.CharField(blank=True, max_length=254, null=True)),
                ('ves_coordinatex', models.FloatField(blank=True, null=True)),
                ('ves_coordinatey', models.FloatField(blank=True, null=True)),
                ('ves_coordinatez', models.FloatField(blank=True, null=True)),
                ('geophysicalsurvey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vertical_electric_soundings', to='observe.geophysicalsurvey')),
            ],
        ),
        migrations.CreateModel(
            name='waterchemistrysurvey_station',
            fields=[
                ('id_pk', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('english_name', models.CharField(blank=True, max_length=254, null=True)),
                ('arabic_name', models.CharField(blank=True, max_length=254, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('sourcetype', models.CharField(blank=True, max_length=254, null=True)),
                ('owner', models.CharField(blank=True, max_length=254, null=True)),
                ('agency', models.CharField(blank=True, max_length=254, null=True)),
                ('mohafaza', models.CharField(blank=True, max_length=254, null=True)),
                ('montika', models.CharField(blank=True, max_length=254, null=True)),
                ('nahia', models.CharField(blank=True, max_length=254, null=True)),
                ('village', models.CharField(blank=True, max_length=254, null=True)),
                ('sub_basin', models.CharField(blank=True, max_length=254, null=True)),
                ('w84_lon_deg', models.FloatField(blank=True, null=True)),
                ('w84_lon_min', models.FloatField(blank=True, null=True)),
                ('w84_lon_sec', models.FloatField(blank=True, null=True)),
                ('w84_lat_deg', models.FloatField(blank=True, null=True)),
                ('w84_lat_min', models.FloatField(blank=True, null=True)),
                ('w84_lat_sec', models.FloatField(blank=True, null=True)),
                ('w84_utm_x', models.FloatField(blank=True, null=True)),
                ('w84_utm_y', models.FloatField(blank=True, null=True)),
                ('w84_utm_z', models.FloatField(blank=True, null=True)),
                ('w84_utm_zone', models.CharField(blank=True, max_length=254, null=True)),
                ('stm_x', models.CharField(blank=True, max_length=254, null=True)),
                ('stm_y', models.CharField(blank=True, max_length=254, null=True)),
                ('stm_z', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Waterpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waterfacilitypoint_id', models.CharField(max_length=254)),
                ('city', models.CharField(blank=True, max_length=254)),
                ('agency', models.CharField(blank=True, max_length=254)),
                ('gov', models.CharField(blank=True, max_length=254)),
                ('type', models.CharField(blank=True, max_length=254)),
                ('town', models.CharField(blank=True, max_length=254)),
                ('site', models.CharField(blank=True, max_length=254)),
                ('village', models.CharField(blank=True, max_length=254)),
                ('basin', models.CharField(blank=True, max_length=254)),
                ('coordinate_x', models.FloatField(null=True)),
                ('coordinate_y', models.FloatField(null=True)),
                ('coordinate_z', models.CharField(blank=True, max_length=254)),
                ('w84_lon_deg', models.FloatField(null=True)),
                ('w84_lon_min', models.FloatField(null=True)),
                ('w84_lon_sec', models.CharField(blank=True, max_length=254)),
                ('w84_utm_zone', models.CharField(blank=True, max_length=254)),
                ('w84_utm_x', models.FloatField(null=True)),
                ('w84_utm_y', models.FloatField(null=True)),
                ('w84_utm_z', models.FloatField(null=True)),
                ('remarks', models.CharField(blank=True, max_length=254)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='XY_Well',
            fields=[
                ('id_field', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('old_id', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_a', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_e', models.CharField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('agency', models.CharField(blank=True, max_length=254, null=True)),
                ('mohafaza', models.CharField(blank=True, max_length=254, null=True)),
                ('montika', models.CharField(blank=True, max_length=254, null=True)),
                ('nahia', models.CharField(blank=True, max_length=254, null=True)),
                ('village', models.CharField(blank=True, max_length=254, null=True)),
                ('sub_baisn', models.CharField(blank=True, max_length=254, null=True)),
                ('w84_utm_x', models.FloatField(blank=True, null=True)),
                ('w84_utm_y', models.FloatField(blank=True, null=True)),
                ('w84_utm_z', models.FloatField(blank=True, null=True)),
                ('means_z', models.CharField(blank=True, max_length=254, null=True)),
                ('data_sourc', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('image', models.ImageField(default='default.jpg', upload_to='xy_well_pic')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='well_inf',
            fields=[
                ('surveyer_name', models.CharField(blank=True, max_length=254, null=True)),
                ('survey_date', models.DateField(blank=True, null=True)),
                ('gps_number', models.CharField(blank=True, max_length=50, null=True)),
                ('well_completion_date', models.DateField(blank=True, null=True)),
                ('open_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('water_use', models.CharField(blank=True, max_length=254)),
                ('atitude_of_top_of_well', models.CharField(blank=True, max_length=254)),
                ('total_depth', models.IntegerField(blank=True, null=True)),
                ('well_ownership', models.CharField(blank=True, max_length=254, null=True)),
                ('well_oner_name', models.CharField(blank=True, max_length=254, null=True)),
                ('dia_top_casing', models.CharField(blank=True, max_length=254, null=True)),
                ('min_dia_casing', models.CharField(blank=True, max_length=254, null=True)),
                ('pump_installed_in_the_well', models.CharField(blank=True, max_length=254, null=True)),
                ('measurment_items', models.CharField(blank=True, max_length=254, null=True)),
                ('gw_meas_freq_dryseason', models.CharField(blank=True, max_length=254, null=True)),
                ('gw_meas_freq_rainyseason', models.CharField(blank=True, max_length=254, null=True)),
                ('labo_qual_analysis_freq_drysea', models.CharField(blank=True, max_length=254, null=True)),
                ('labo_qual_analysis_freq_rainysea', models.CharField(blank=True, max_length=254, null=True)),
                ('type_of_measurment', models.CharField(blank=True, max_length=254, null=True)),
                ('type_of_automatic_sensor', models.CharField(blank=True, max_length=254, null=True)),
                ('sensor_depth', models.IntegerField(blank=True, null=True)),
                ('condition_of_station', models.CharField(blank=True, max_length=254, null=True)),
                ('improvement_point', models.CharField(blank=True, max_length=254, null=True)),
                ('xy_well', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='well_inf', serialize=False, to='observe.xy_well')),
            ],
        ),
        migrations.CreateModel(
            name='XY_Spring',
            fields=[
                ('id_field', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('old_id', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_a', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_e', models.CharField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('agency', models.CharField(blank=True, max_length=254, null=True)),
                ('mohafaza', models.CharField(blank=True, max_length=254, null=True)),
                ('montika', models.CharField(blank=True, max_length=254, null=True)),
                ('nahia', models.CharField(blank=True, max_length=254, null=True)),
                ('village', models.CharField(blank=True, max_length=254, null=True)),
                ('sub_baisn', models.CharField(blank=True, max_length=254, null=True)),
                ('w84_utm_x', models.FloatField(blank=True, null=True)),
                ('w84_utm_y', models.FloatField(blank=True, null=True)),
                ('w84_utm_z', models.FloatField(blank=True, null=True)),
                ('means_z', models.CharField(blank=True, max_length=254, null=True)),
                ('data_sourc', models.CharField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(default='default.jpg', upload_to='xy_spring_pic')),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='XY_River',
            fields=[
                ('id_field', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('old_id', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_a', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_e', models.CharField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('agency', models.CharField(blank=True, max_length=254, null=True)),
                ('mohafaza', models.CharField(blank=True, max_length=254, null=True)),
                ('montika', models.CharField(blank=True, max_length=254, null=True)),
                ('nahia', models.CharField(blank=True, max_length=254, null=True)),
                ('village', models.CharField(blank=True, max_length=254, null=True)),
                ('sub_baisn', models.CharField(blank=True, max_length=254, null=True)),
                ('w84_utm_x', models.FloatField(blank=True, null=True)),
                ('w84_utm_y', models.FloatField(blank=True, null=True)),
                ('w84_utm_z', models.FloatField(blank=True, null=True)),
                ('means_z', models.CharField(blank=True, max_length=254, null=True)),
                ('data_sourc', models.CharField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(default='default.jpg', upload_to='xy_river_pic')),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='XY_Metology',
            fields=[
                ('id_field', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('old_id', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_a', models.CharField(blank=True, max_length=254, null=True)),
                ('sitename_e', models.CharField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(blank=True, max_length=254, null=True)),
                ('agency', models.CharField(blank=True, max_length=254, null=True)),
                ('mohafaza', models.CharField(blank=True, max_length=254, null=True)),
                ('mohafaza_en', models.CharField(blank=True, max_length=254, null=True)),
                ('montika', models.CharField(blank=True, max_length=254, null=True)),
                ('nahia', models.CharField(blank=True, max_length=254, null=True)),
                ('village', models.CharField(blank=True, max_length=254, null=True)),
                ('sub_baisn', models.CharField(blank=True, max_length=254, null=True)),
                ('w84_utm_x', models.FloatField(blank=True, null=True)),
                ('w84_utm_y', models.FloatField(blank=True, null=True)),
                ('w84_utm_z', models.FloatField(blank=True, null=True)),
                ('means_z', models.CharField(blank=True, max_length=254, null=True)),
                ('data_sourc', models.CharField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='xy_metology_pic')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='watersampling',
            fields=[
                ('date', models.DateField()),
                ('sample_id', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('sample_datetime', models.DateField(blank=True, null=True)),
                ('taste_datetime', models.DateField(blank=True, null=True)),
                ('analysis_type', models.CharField(blank=True, max_length=254, null=True)),
                ('laboratory_name', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('waterchemistrysurvey_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watersamplings', to='observe.waterchemistrysurvey_station')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'sample_id')},
            },
        ),
        migrations.CreateModel(
            name='ves_result_sp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vdt_point', models.CharField(blank=True, max_length=254, null=True)),
                ('vdt_depth', models.FloatField(blank=True, null=True)),
                ('vdt_sresistivity', models.FloatField(blank=True, null=True)),
                ('vertical_electric_sounding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ves_result_sps', to='observe.vertical_electric_sounding')),
            ],
        ),
        migrations.CreateModel(
            name='ves_result_ap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ves_data_point', models.CharField(blank=True, max_length=254, null=True)),
                ('vdt_depth', models.FloatField(blank=True, null=True)),
                ('vdt_sresistivity', models.FloatField(blank=True, null=True)),
                ('vertical_electric_sounding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ves_result_aps', to='observe.vertical_electric_sounding')),
            ],
        ),
        migrations.CreateModel(
            name='Spring_inf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surveyer_name', models.CharField(blank=True, max_length=254, null=True)),
                ('survey_date', models.DateField(blank=True, null=True)),
                ('gps_number', models.CharField(blank=True, max_length=50, null=True)),
                ('water_use', models.CharField(blank=True, max_length=20, null=True)),
                ('open_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('present_spring_statuse', models.CharField(blank=True, max_length=254, null=True)),
                ('spring_ownership', models.CharField(blank=True, max_length=254, null=True)),
                ('measurment_items', models.CharField(blank=True, max_length=254, null=True)),
                ('labo_qual_analysis_frequency', models.CharField(blank=True, max_length=254, null=True)),
                ('type_of_automatic_sensor', models.CharField(blank=True, max_length=254, null=True)),
                ('equipped_with_stuff_gauge', models.CharField(blank=True, max_length=254, null=True)),
                ('field_measur_freq_dryseason', models.CharField(blank=True, max_length=254, null=True)),
                ('field_measur_freq_rainyseason', models.CharField(blank=True, max_length=254, null=True)),
                ('measure_type_head', models.CharField(blank=True, max_length=254, null=True)),
                ('measure_type_quality', models.CharField(blank=True, max_length=254, null=True)),
                ('aquifer_litho_code', models.CharField(blank=True, max_length=254, null=True)),
                ('condition_of_station', models.CharField(blank=True, max_length=254, null=True)),
                ('improvement_point', models.CharField(blank=True, max_length=254, null=True)),
                ('xy_spring', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='spring_inf', to='observe.xy_spring')),
            ],
        ),
        migrations.CreateModel(
            name='River_inf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surveyer_name', models.CharField(blank=True, max_length=254, null=True)),
                ('survey_date', models.DateField(blank=True, null=True)),
                ('gps_number', models.CharField(blank=True, max_length=50, null=True)),
                ('water_use', models.CharField(blank=True, max_length=20, null=True)),
                ('open_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('channel_condition', models.CharField(blank=True, max_length=254, null=True)),
                ('measurment_items', models.CharField(blank=True, max_length=254, null=True)),
                ('labo_qual_analysis_frequency', models.CharField(blank=True, max_length=254, null=True)),
                ('type_of_automatic_sensor', models.CharField(blank=True, max_length=254, null=True)),
                ('station_condition', models.CharField(blank=True, max_length=254, null=True)),
                ('equipped_with_stuff_gauge', models.CharField(blank=True, max_length=254, null=True)),
                ('field_measur_freq_dryseason', models.CharField(blank=True, max_length=254, null=True)),
                ('field_measur_freq_rainyseason', models.CharField(blank=True, max_length=254, null=True)),
                ('measure_type_head', models.CharField(blank=True, max_length=254, null=True)),
                ('measure_type_quality', models.CharField(blank=True, max_length=254, null=True)),
                ('statuse_of_station', models.CharField(blank=True, max_length=254, null=True)),
                ('improvement_point', models.CharField(blank=True, max_length=254, null=True)),
                ('xy_river', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='river_inf', to='observe.xy_river')),
            ],
        ),
        migrations.CreateModel(
            name='pumptest_obswell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pto_depth', models.FloatField(blank=True, null=True)),
                ('pto_diameter', models.FloatField(blank=True, null=True)),
                ('pto_swl', models.FloatField(blank=True, null=True)),
                ('pto_distance', models.FloatField(blank=True, null=True)),
                ('pto_reflevel', models.FloatField(blank=True, null=True)),
                ('pumping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pumptest_obswells', to='observe.pumping')),
            ],
        ),
        migrations.AddField(
            model_name='pumping',
            name='waterpoint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pumpings', to='observe.waterpoint'),
        ),
        migrations.CreateModel(
            name='profiling_electric_sounding_re',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_datetime', models.DateField(blank=True, null=True)),
                ('rpf_line', models.CharField(blank=True, max_length=254, null=True)),
                ('rpf_startx', models.FloatField(blank=True, null=True)),
                ('rpf_starty', models.FloatField(blank=True, null=True)),
                ('rpf_startz', models.FloatField(blank=True, null=True)),
                ('rpf_endx', models.FloatField(blank=True, null=True)),
                ('rpf_endy', models.FloatField(blank=True, null=True)),
                ('rpf_endz', models.FloatField(blank=True, null=True)),
                ('rpf_length', models.FloatField(blank=True, null=True)),
                ('gps_surveyor', models.CharField(blank=True, max_length=254, null=True)),
                ('geophysicalsurvey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiling_electric_sounding_re', to='observe.geophysicalsurvey')),
            ],
        ),
        migrations.CreateModel(
            name='profiling_electric_sounding_da',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rpd_datax', models.FloatField(blank=True, null=True)),
                ('rpd_datay', models.FloatField(blank=True, null=True)),
                ('profiling_electric_sounding_re', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiling_electric_sounding_das', to='observe.profiling_electric_sounding_re')),
            ],
        ),
        migrations.CreateModel(
            name='Metology_inf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surveyer_name', models.CharField(blank=True, max_length=254)),
                ('survey_date', models.DateField(blank=True, null=True)),
                ('gps_number', models.IntegerField(blank=True, null=True)),
                ('elevation', models.FloatField(blank=True, null=True)),
                ('open_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('present_condition', models.CharField(blank=True, max_length=254, null=True)),
                ('obs_item', models.CharField(blank=True, max_length=254, null=True)),
                ('meas_frequency', models.CharField(blank=True, max_length=254, null=True)),
                ('meas_type', models.CharField(blank=True, max_length=254, null=True)),
                ('condition_of_station', models.CharField(blank=True, max_length=254)),
                ('improvement_point', models.CharField(blank=True, max_length=254, null=True)),
                ('xy_metology', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metology_inf', to='observe.xy_metology')),
            ],
        ),
        migrations.CreateModel(
            name='loggingdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logdata_type', models.CharField(blank=True, max_length=40, null=True)),
                ('depth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('data_source', models.CharField(blank=True, max_length=50, null=True)),
                ('other_source', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loggingdatas', to='observe.xy_well')),
            ],
        ),
        migrations.CreateModel(
            name='log_plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.CharField(blank=True, max_length=40, null=True)),
                ('log_design', models.CharField(blank=True, max_length=254, null=True)),
                ('log_description', models.CharField(blank=True, max_length=254, null=True)),
                ('log_inf', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_plots', to='observe.xy_well')),
            ],
        ),
        migrations.CreateModel(
            name='wind_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('avg_monthly_wind_from_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('meas_method', models.CharField(max_length=254)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wind_monthlys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='wind_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('daily_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254)),
                ('other_source', models.CharField(blank=True, max_length=254)),
                ('remarks', models.CharField(blank=True, max_length=254)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wind_dailys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='welltoplevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meas_date', models.DateField()),
                ('x_stm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('y_stm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('z_stm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('x_utm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('y_utm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('z_utm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ground_level', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('top_concrete', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('top_casing', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('source', models.CharField(blank=True, max_length=245, null=True)),
                ('method', models.CharField(blank=True, max_length=254, null=True)),
                ('accuracy', models.CharField(blank=True, max_length=254, null=True)),
                ('convert_g_sys', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='welltoplevels', to='observe.xy_well')),
            ],
            options={
                'ordering': ('meas_date',),
                'unique_together': {('meas_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='wells_quality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('ph', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ec_ms_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('temp', models.CharField(blank=True, max_length=254, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wells_qualitys', to='observe.xy_well')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='welllogging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_from', models.DateField()),
                ('log_to', models.DateField()),
                ('log_layer', models.CharField(blank=True, max_length=254, null=True)),
                ('log_type', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('revision_inf', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wellloggings', to='observe.xy_well')),
            ],
            options={
                'ordering': ('log_from',),
                'unique_together': {('log_from', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='toxic_substances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('phenol', models.FloatField(blank=True, null=True)),
                ('benzen', models.FloatField(blank=True, null=True)),
                ('mbas', models.FloatField(blank=True, null=True)),
                ('b', models.FloatField(blank=True, null=True)),
                ('f', models.FloatField(blank=True, null=True)),
                ('bhc_a', models.FloatField(blank=True, null=True)),
                ('bhc_b', models.FloatField(blank=True, null=True)),
                ('abs', models.FloatField(blank=True, null=True)),
                ('aox', models.FloatField(blank=True, null=True)),
                ('pcb', models.FloatField(blank=True, null=True)),
                ('dioxin', models.FloatField(blank=True, null=True)),
                ('chlorodan_a', models.FloatField(blank=True, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toxic_substancess', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='temperature_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('monthly_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('avg_temp_from_daily', models.FloatField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temperature_monthlys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='temperature_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateField()),
                ('daily_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_time', models.IntegerField(blank=True, null=True)),
                ('min_time', models.IntegerField(blank=True, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temperature_dailys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_date',),
                'unique_together': {('obs_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='surface_hq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('h', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('q', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('section_width_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('section_depth_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('section_area_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('velocity_m_s', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surface_hqs', to='observe.xy_river')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='sunshine_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateField()),
                ('rad_mj_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rad_max_w_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_time', models.CharField(blank=True, max_length=250, null=True)),
                ('duration_hr', models.CharField(blank=True, max_length=250, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=250, null=True)),
                ('data_source', models.CharField(blank=True, max_length=245, null=True)),
                ('other_source', models.CharField(blank=True, max_length=245, null=True)),
                ('rad_avg_w_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rad_min_w_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=245, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sunshine_dailys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_date',),
                'unique_together': {('obs_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='step_drawdown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sdd_datetime', models.DateField()),
                ('sdd_accumulatetime', models.DateField(blank=True, null=True)),
                ('pumptest_interval_to', models.FloatField(blank=True, null=True)),
                ('sdd_discharge', models.FloatField(blank=True, null=True)),
                ('sdd_waterdepth', models.FloatField(blank=True, null=True)),
                ('sdd_drawdown', models.FloatField(blank=True, null=True)),
                ('pumping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_drawdowns', to='observe.pumping')),
            ],
            options={
                'ordering': ('-sdd_datetime',),
                'unique_together': {('sdd_datetime', 'id')},
            },
        ),
        migrations.CreateModel(
            name='springdischarge_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('monthly_avg_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('monthly_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=250, null=True)),
                ('data_source', models.CharField(blank=True, max_length=250, null=True)),
                ('other_source', models.CharField(blank=True, max_length=250, null=True)),
                ('remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='springdischarge_monthlys', to='observe.xy_spring')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='springdischarge_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('stage_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rc_id', models.CharField(blank=True, max_length=50, null=True)),
                ('discharge_m3_sec', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=50, null=True)),
                ('data_source', models.CharField(blank=True, max_length=50, null=True)),
                ('other_source', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='springdischarge_dailys', to='observe.xy_spring')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='springdischarge_avg_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=5)),
                ('avg_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('min_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='springdischarge_avg_monthlys', to='observe.xy_spring')),
            ],
            options={
                'unique_together': {('month', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='springdischarge_avg_anual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('avg_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('min_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='springdischarge_avg_anuals', to='observe.xy_spring')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='springdischarge_anual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.CharField(max_length=10)),
                ('anual_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='springdischarge_anuals', to='observe.xy_spring')),
            ],
            options={
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='snowfall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('dailysnowfall', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=50, null=True)),
                ('data_source', models.CharField(blank=True, max_length=245, null=True)),
                ('other_source', models.CharField(blank=True, max_length=245, null=True)),
                ('remarks', models.CharField(blank=True, max_length=245, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snowfalls', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='snowdepth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('dailysnowdepth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=50, null=True)),
                ('data_source', models.CharField(blank=True, max_length=245, null=True)),
                ('other_source', models.CharField(blank=True, max_length=245, null=True)),
                ('remarks', models.CharField(blank=True, max_length=245, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snowdepths', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='sectiondata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sec_datetime', models.DateField()),
                ('sec_stano', models.CharField(blank=True, max_length=254, null=True)),
                ('sec_x', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sec_y', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectiondatas', to='observe.xy_river')),
            ],
            options={
                'ordering': ('sec_datetime',),
                'unique_together': {('sec_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='sectionareasurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateField()),
                ('sas_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sas_surveyer', models.CharField(blank=True, max_length=254, null=True)),
                ('sas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectionareasurveys', to='observe.xy_river')),
            ],
            options={
                'ordering': ('datetime',),
                'unique_together': {('datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='riverflowmeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('station_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('avg_flow_velocity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('calculated_flow_velocity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('section_id', models.CharField(blank=True, max_length=50, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=50, null=True)),
                ('equipment_spec', models.CharField(blank=True, max_length=50, null=True)),
                ('data_source', models.CharField(blank=True, max_length=50, null=True)),
                ('other_source', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riverflowmeasures', to='observe.xy_river')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='riverdischarge_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('monthly_avg_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_total_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=250, null=True)),
                ('data_source', models.CharField(blank=True, max_length=250, null=True)),
                ('other_source', models.CharField(blank=True, max_length=250, null=True)),
                ('remarks', models.CharField(max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riverdischarge_monthlys', to='observe.xy_river')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='riverdischarge_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('stage_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rc_id', models.CharField(blank=True, max_length=50, null=True)),
                ('discharge_m3_sec', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=250, null=True)),
                ('data_source', models.CharField(blank=True, max_length=250, null=True)),
                ('other_source', models.CharField(blank=True, max_length=250, null=True)),
                ('remarks', models.CharField(max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riverdischarge_dailys', to='observe.xy_river')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='riverdischarge_anual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('anual_discharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riverdischarge_anuals', to='observe.xy_river')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='recovery_test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rct_datetime', models.DateField()),
                ('rct_waterdepth', models.FloatField(blank=True, null=True)),
                ('rct_drawdown', models.FloatField(blank=True, null=True)),
                ('pumping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recovery_tests', to='observe.pumping')),
            ],
            options={
                'ordering': ('-rct_datetime',),
                'unique_together': {('rct_datetime', 'id')},
            },
        ),
        migrations.CreateModel(
            name='pumptest_pumpwell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pumptest_interval_from', models.DateField(blank=True, null=True)),
                ('pumptest_interval_to', models.DateField(blank=True, null=True)),
                ('pumptest_swl', models.FloatField(blank=True, null=True)),
                ('pumptest_diameter', models.FloatField(blank=True, null=True)),
                ('pumping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pumptest_pumpwells', to='observe.pumping')),
            ],
            options={
                'ordering': ('-pumptest_interval_from',),
                'unique_together': {('pumptest_interval_from', 'id')},
            },
        ),
        migrations.CreateModel(
            name='precipitation_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('monthly_precipitaion', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('calculated_value', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precipitation_monthlys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='precipitation_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateField()),
                ('prcp_mm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precipitation_dailys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_date',),
                'unique_together': {('obs_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='precipitation_annual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=50)),
                ('annual_precipitation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('annual_avg_precipitation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precipitation_annuals', to='observe.xy_metology')),
            ],
            options={
                'unique_together': {('waterpoint', 'year')},
            },
        ),
        migrations.CreateModel(
            name='packing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packing_from', models.DateField()),
                ('packing_to', models.DateField()),
                ('packing_layer', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packings', to='observe.xy_well')),
            ],
            options={
                'ordering': ('-packing_from',),
                'unique_together': {('packing_from', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='othercommon_parameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('tss_mg_l', models.FloatField(null=True)),
                ('p_mg_l', models.FloatField(blank=True, null=True)),
                ('s_mg_l', models.FloatField(blank=True, null=True)),
                ('u_mg_l', models.FloatField(blank=True, null=True)),
                ('sr_mg_l', models.FloatField(blank=True, null=True)),
                ('co_mg_l', models.FloatField(blank=True, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='othercommon_parameterss', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='lithologging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depth_from', models.DateField()),
                ('depth_to', models.DateField()),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
                ('rock', models.CharField(blank=True, max_length=254, null=True)),
                ('code', models.CharField(blank=True, max_length=254, null=True)),
                ('age1', models.CharField(blank=True, max_length=254, null=True)),
                ('age2', models.CharField(blank=True, max_length=254, null=True)),
                ('age3', models.CharField(blank=True, max_length=254, null=True)),
                ('hydrocondition', models.CharField(blank=True, max_length=254, null=True)),
                ('hydromedia', models.CharField(blank=True, max_length=254, null=True)),
                ('aquifertype', models.CharField(blank=True, max_length=254, null=True)),
                ('sgwl', models.FloatField(blank=True, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('revision_inf', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lithologgings', to='observe.xy_well')),
            ],
            options={
                'ordering': ('-depth_from',),
                'unique_together': {('depth_from', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='hydrochemical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hard_total_mg_l', models.FloatField(blank=True, null=True)),
                ('hard_lime_mg_l', models.FloatField(blank=True, null=True)),
                ('hard_mag_mg_l', models.FloatField(blank=True, null=True)),
                ('tds_mg_l', models.FloatField(blank=True, null=True)),
                ('ca_mg_l', models.FloatField(blank=True, null=True)),
                ('mg_mg_l', models.FloatField(blank=True, null=True)),
                ('na_mg_l', models.FloatField(blank=True, null=True)),
                ('k_mg_l', models.FloatField(blank=True, null=True)),
                ('so4_mg_l', models.FloatField(blank=True, null=True)),
                ('free_cl_mg_l', models.FloatField(blank=True, null=True)),
                ('cl_mg_l', models.FloatField(blank=True, null=True)),
                ('hco3_mg_l', models.FloatField(blank=True, null=True)),
                ('co3_mg_l', models.FloatField(blank=True, null=True)),
                ('o18_mg_l', models.FloatField(blank=True, null=True)),
                ('h2_mg_l', models.FloatField(blank=True, null=True)),
                ('he_mg_l', models.FloatField(blank=True, null=True)),
                ('h3_mg_l', models.FloatField(blank=True, null=True)),
                ('c14_mg_l', models.FloatField(blank=True, null=True)),
                ('ra_mg_l', models.FloatField(blank=True, null=True)),
                ('estemated_waterage', models.CharField(blank=True, max_length=254, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hydrochemicals', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='humidity_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('monthly_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('avg_hum_from_daily', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='humidity_monthlys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='humidity_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateField()),
                ('daily_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_time', models.CharField(blank=True, max_length=255, null=True)),
                ('min_time', models.CharField(blank=True, max_length=255, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='humidity_dailys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_date',),
                'unique_together': {('obs_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='heavymetals_rareelement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('Cd', models.CharField(blank=True, max_length=254, null=True)),
                ('Pb', models.CharField(blank=True, max_length=254, null=True)),
                ('Cu', models.CharField(blank=True, max_length=254, null=True)),
                ('Cr', models.CharField(blank=True, max_length=254, null=True)),
                ('Ni', models.CharField(blank=True, max_length=254, null=True)),
                ('Mn', models.CharField(blank=True, max_length=254, null=True)),
                ('Fe', models.CharField(blank=True, max_length=254, null=True)),
                ('Al', models.CharField(blank=True, max_length=254, null=True)),
                ('Zn', models.CharField(blank=True, max_length=254, null=True)),
                ('AS', models.CharField(blank=True, max_length=254, null=True)),
                ('Be', models.CharField(blank=True, max_length=254, null=True)),
                ('cn', models.CharField(blank=True, max_length=254, null=True)),
                ('Li', models.CharField(blank=True, max_length=254, null=True)),
                ('Hg', models.CharField(blank=True, max_length=254, null=True)),
                ('Mo', models.CharField(blank=True, max_length=254, null=True)),
                ('Se', models.CharField(blank=True, max_length=254, null=True)),
                ('Ba', models.CharField(blank=True, max_length=254, null=True)),
                ('Ag', models.CharField(blank=True, max_length=254, null=True)),
                ('units', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='heavymetals_rareelements', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='groundwaterlevel_manual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('depth_to_water', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('waterlevel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=250, null=True)),
                ('data_source', models.CharField(blank=True, max_length=250, null=True)),
                ('other_source', models.CharField(blank=True, max_length=250, null=True)),
                ('remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groundwaterlevel_manuals', to='observe.xy_well')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='groundwaterlevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('depth_to_water', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('waterlevel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=50, null=True)),
                ('data_source', models.CharField(blank=True, max_length=50, null=True)),
                ('other_source', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groundwaterlevels', to='observe.xy_well')),
            ],
            options={
                'ordering': ('-obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='fieldparameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('temperature_c', models.CharField(blank=True, max_length=254, null=True)),
                ('do_mg_l', models.FloatField(blank=True, null=True)),
                ('ph', models.FloatField(blank=True, null=True)),
                ('do_per_cent', models.FloatField(blank=True, null=True)),
                ('cond_ms_cm', models.FloatField(blank=True, max_length=254, null=True)),
                ('turbidity_ntu', models.CharField(blank=True, max_length=254, null=True)),
                ('smell', models.CharField(blank=True, max_length=254, null=True)),
                ('color', models.CharField(blank=True, max_length=254, null=True)),
                ('taste', models.CharField(blank=True, max_length=254, null=True)),
                ('flow_rate', models.CharField(blank=True, max_length=254, null=True)),
                ('redox', models.CharField(blank=True, max_length=254, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fieldparameters', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='evaporation_monthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('monthly_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_evap_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaporation_monthlys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='evaporation_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateField()),
                ('evap_mm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaporation_dailys', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_date',),
                'unique_together': {('obs_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='eutrophication2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('bod_mg_l', models.CharField(blank=True, max_length=254, null=True)),
                ('cod_mg_l', models.CharField(blank=True, max_length=254, null=True)),
                ('do_mg_l', models.CharField(blank=True, max_length=254, null=True)),
                ('ss', models.CharField(blank=True, max_length=254, null=True)),
                ('ph', models.CharField(blank=True, max_length=254, null=True)),
                ('ec', models.CharField(blank=True, max_length=254, null=True)),
                ('alkalinity', models.CharField(blank=True, max_length=254, null=True)),
                ('nh3_mg_l', models.CharField(blank=True, max_length=254, null=True)),
                ('nh4_mg_l', models.CharField(blank=True, max_length=254, null=True)),
                ('po4', models.CharField(blank=True, max_length=254, null=True)),
                ('no2', models.CharField(blank=True, max_length=254, null=True)),
                ('oil', models.CharField(blank=True, max_length=254, null=True)),
                ('t_n', models.CharField(blank=True, max_length=254, null=True)),
                ('t_p', models.CharField(blank=True, max_length=254, null=True)),
                ('toc', models.CharField(blank=True, max_length=254, null=True)),
                ('si', models.CharField(blank=True, max_length=254, null=True)),
                ('h2s', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eutrophication2s', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='drilling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drilling_from', models.DateField()),
                ('drilling_to', models.DateField()),
                ('drilling_diameter', models.FloatField(blank=True, null=True)),
                ('drilling_layer', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=50, null=True)),
                ('other_source', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drillings', to='observe.xy_well')),
            ],
            options={
                'ordering': ('drilling_from',),
                'unique_together': {('drilling_from', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='discharge_survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.DateField()),
                ('type_of_regression', models.CharField(blank=True, max_length=50, null=True)),
                ('data_limit_up', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('data_limit_low', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('formula', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discharge_surveys', to='observe.xy_river')),
            ],
            options={
                'ordering': ('year',),
                'unique_together': {('year', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='continious_dischage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cds_date', models.DateField()),
                ('cds_accumulate', models.FloatField(blank=True, null=True)),
                ('cds_depth', models.FloatField(blank=True, null=True)),
                ('cds_time', models.FloatField(blank=True, null=True)),
                ('cds_drawdown', models.FloatField(blank=True, null=True)),
                ('pumping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='continious_dischages', to='observe.pumping')),
            ],
            options={
                'ordering': ('-cds_date',),
                'unique_together': {('cds_date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='casing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casing_from', models.DateField()),
                ('casing_to', models.DateField()),
                ('casing_diameter', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('casing_type', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=50, null=True)),
                ('other_source', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='casings', to='observe.xy_well')),
            ],
            options={
                'ordering': ('casing_from',),
                'unique_together': {('casing_from', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='biological',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('coliform_t7a_100ml', models.CharField(blank=True, max_length=254, null=True)),
                ('sodmons_t7a_100ml', models.CharField(blank=True, max_length=254, null=True)),
                ('bsodomonas_t7a_24hour', models.CharField(blank=True, max_length=254, null=True)),
                ('bacteria', models.CharField(blank=True, max_length=254, null=True)),
                ('ferments_number', models.CharField(blank=True, max_length=254, null=True)),
                ('helmenth_eggs', models.CharField(blank=True, max_length=254, null=True)),
                ('watersampling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biologicals', to='observe.watersampling')),
            ],
            options={
                'ordering': ('-date',),
                'unique_together': {('date', 'id')},
            },
        ),
        migrations.CreateModel(
            name='auto_groundwater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateField()),
                ('depth_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gw_level_m', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auto_groundwaters', to='observe.xy_well')),
            ],
            options={
                'ordering': ('obs_date',),
                'unique_together': {('obs_date', 'waterpoint')},
            },
        ),
        migrations.CreateModel(
            name='airpressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_datetime', models.DateField()),
                ('daily_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meas_method', models.CharField(blank=True, max_length=254, null=True)),
                ('data_source', models.CharField(blank=True, max_length=254, null=True)),
                ('other_source', models.CharField(blank=True, max_length=254, null=True)),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waterpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airpressures', to='observe.xy_metology')),
            ],
            options={
                'ordering': ('obs_datetime',),
                'unique_together': {('obs_datetime', 'waterpoint')},
            },
        ),
    ]
